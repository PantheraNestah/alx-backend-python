# .github/workflows/ci.yml

name: Django CI with code quality checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Django Tests and Generate Coverage Report
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: "False"
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_db"
        DB_USER: "root"
        DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
      run: |
        #python manage.py test
        pytest --cov=. --cov-report=xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml
